# This file contains common pin mappings for the TH3D EZBoard V2.x
# To use this config, check "Enable extra low-level configuration options"
# and compile the firmware for the STM32F405 with 12mhz Crystal,
# 48KiB Bootloader, and USB communication.

# After the firmware in compiled, change directory to out/ and
# execute the following command
# arm-none-eabi-objcopy -O srec klipper.elf firmware.bin

# The "make flash" command does not work on this board. Instead,
# after running "make", and then the arm command above, 
# copy the generated "out/firmware.bin" file to
# an SD card and then restart the board with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]
[include shell_command.cfg]
[include macros.cfg]

[stepper_x] # Left motor - B motor - Low belt
step_pin: PE2
dir_pin: !PE1
enable_pin: !PE3
microsteps: 16
rotation_distance: 40
endstop_pin: EBB36: PB6
position_endstop: 243
position_min: -25.5
position_max: 243
homing_speed: 50
full_steps_per_rotation: 400

[tmc2209 stepper_x]
uart_pin: PE0
#uart_address: 0
run_current: 0.600
stealthchop_threshold: 999999

[stepper_y] # Right motor - A Motor - High belt
step_pin: PD5
dir_pin: !PD4
enable_pin: !PD6
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_min: -17.5
position_endstop: 228
position_max: 228
homing_speed: 50
full_steps_per_rotation: 400

[tmc2209 stepper_y]
uart_pin: PD3
#uart_address: 1
run_current: 0.600
stealthchop_threshold: 999999

[stepper_z]
step_pin: PA15
dir_pin: !PA8
enable_pin: !PD1
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
position_min: -25
position_max: 305

[tmc2209 stepper_z]
uart_pin: PD0
run_current: 0.600
stealthchop_threshold: 999999

[safe_z_home]
home_xy_position: 144,123 # Choose an X,Y position that is in the center of your bed. For a 300x300 machine that will be 150, 150. Use the same principle to calculate your bed center.
z_hop: 5
z_hop_speed: 25
speed: 200

[bed_mesh]
horizontal_move_z: 2
speed: 200
# For the mesh dimensions below, the coordinates need to be reachable by the center of the probe. To calculate coordinates that will work, use the formula below:
# mesh x min = position_min_x + greater_of (15mm or x_offset) <--- in this term, only consider the x offset if it is positive, ignore if negative.
# mesh y min = position_min_y + greater_of (15mm or y_offset) <--- in this term, only consider the y offset if it is positive, ignore if negative.
# mesh x max = position_max_x - greater_of (15mm or |x_offset|) <--- in this term, only consider the x offset if it is negative, ignore if positive.
# mesh y max = position_max_y - greater_of (15mm or |y_offset|) <--- in this term, only consider the y offset if it is negative, ignore if positive.
# Example: Consider that you have a 300 x 300 bed with the max x and y positions being 300 and the min being 0. Your probe offsets are -20 for X and 10 for Y
# For mesh x min we ignore the x offset term because it is negative. Therefore mesh x min = 15
# For mesh y min we do not ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y min = 15
# For mesh x max we do not ignore the x offset term because it is negative. It is also greater than 15. Therefore mesh x max = 280
# For mesh y max we ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y max = 285
# The final result would be mesh_min: 15, 15 mesh_max: 280, 285
mesh_min: 8, 15  # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
mesh_max: 200, 214 # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
probe_count: 5, 5
algorithm: bicubic
#scan_overshoot: 8  #uncomment this section if you still have room left over on the X axis for some scan overshoot to product smoother movements and more accurate scanning. Uncommenting this should be fine if you are using a standard voron mount.
fade_start: 1
fade_end: 10
fade_target: 0
adaptive_margin: 5

[screws_tilt_adjust]
screw1: 0, 0
screw1_name: back right screw
screw2: 155, 30
screw2_name: back left screw
screw3: 0, 185
screw3_name: front right screw
screw4: 155, 185
screw4_name: front left screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M4

[extruder]
step_pin: EBB36:PD0
dir_pin: EBB36:PD1
enable_pin: !EBB36:PD2
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 4.637
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBB36:PB13
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: EBB36:PA3
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 250
# min_extrude_temp: 0
max_extrude_only_distance: 500.0
max_extrude_only_velocity: 120

[tmc2209 extruder]
uart_pin: EBB36:PA15
run_current: 0.850
interpolate: true
sense_resistor: 0.11
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PD7 #PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1 #PA0 #PC4
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan Heatbreak_Cooling_Fan]
pin: EBB36:PA1
heater: extruder
heater_temp: 50.0

[fan]
pin: EBB36:PA0

[controller_fan SKR2_mainboard]
pin: PB5
stepper: stepper_x,stepper_y,stepper_z
idle_timeout: 30

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_300049000E50334132383020-if00 
restart_method: command

[mcu BTTPi]
serial: /tmp/klipper_host_mcu

[mcu EBB36]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_2600060010504B5735313720-if00 #canbus_uuid: 213606d1cf84
restart_method: command

[adxl345]
cs_pin: EBB36:PB12
spi_software_sclk_pin: EBB36:PB10
spi_software_mosi_pin: EBB36:PB11
spi_software_miso_pin: EBB36:PB2
axes_map: -x,-z,y

[resonance_tester]
accel_chip: adxl345
probe_points:
    # Somewhere slightly above the middle of your print bed
    110,110, 20

[temperature_sensor BTT_EBB36]
sensor_type: temperature_mcu
sensor_mcu: EBB36
min_temp: 0
max_temp: 100

[temperature_fan BTT_Pi]
pin: BTTPi:gpio211
kick_start_time: 0.8
#shutdown_speed: 0
off_below: 0.1
max_power: 1.0
#fan_speed: 0.6
sensor_type: temperature_host
control: pid
min_temp: 0
max_temp: 85
#max_delta: 5.0
pid_kp: 1.0
pid_ki: 0.5
pid_kd: 2.0
min_speed: 0.1
max_speed: 1.0
target_temp: 25

[bltouch]
sensor_pin: ^EBB36: PB9
control_pin: !EBB36: PB8
#   Probe detection pin. If the pin is on a different microcontroller
#   than the Z steppers then it enables "multi-mcu homing". This
#   parameter must be provided.
#deactivate_on_each_sample: True
#   This determines if Klipper should execute deactivation gcode
#   between each probe attempt when performing a multiple probe
#   sequence. The default is True.
x_offset: -34.0
#   The distance (in mm) between the probe and the nozzle along the
#   x-axis. The default is 0.
y_offset: -13.0
#   The distance (in mm) between the probe and the nozzle along the
#   y-axis. The default is 0.
z_offset: 15
probe_with_touch_mode: True

#[probe_eddy_current btt_eddy]
#sensor_type: ldc1612
#z_offset: 2.5
#i2c_address:
#i2c_mcu: EBB36  
#i2c_bus: i2c3_PB3_PB4
#x_offset: -34
#y_offset: -13

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[force_move]
enable_force_move: true 

[exclude_object]

[gcode_arcs]
resolution: 1.0

#[virtual_sdcard]
#path: /home/biqu/printer_data/gcodes
#on_error_gcode: CANCEL_PRINT

[board_pins]
aliases:
# EXP1 header
    EXP1_1=PA14, EXP1_3=PC4, EXP1_5=PC5, EXP1_7=PB12, EXP1_9=<GND>,
    EXP1_2=PB0, EXP1_4=<RST>, EXP1_6=PB13, EXP1_8=PB15, EXP1_10=<5V>
    
[output_pin motor_power]
pin: PC13
value: 1

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
timeout: 600
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.
#    measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
#    max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
#    dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 36.137
#*# pid_ki = 5.354
#*# pid_kd = 60.980
